{"version":3,"sources":["stories/button/Button.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","primary","size","backgroundColor","label","props","mode","type","className","join","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA6BaA,EAAS,SAAC,GAMH,IAAD,IALjBC,eAKiB,aAJjBC,YAIiB,MAJV,SAIU,EAHjBC,EAGiB,EAHjBA,gBACAC,EAEiB,EAFjBA,MACGC,EACc,iBACXC,EAAOL,EAAU,4BAA8B,8BACrD,OACE,gDACEM,KAAK,SACLC,UAAW,CAAC,mBAAD,4BAA0CN,GAAQI,GAAMG,KAAK,KACxEC,MAAO,CAAEP,oBACLE,GAJN,aAMGD,MCjCQO,EARO,WACpB,OACE,8BACE,cAAC,EAAD,CAAQV,SAAO,EAACG,MAAM,aCQbQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.06238e4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.css';\r\n\r\ninterface ButtonProps {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  primary?: boolean;\r\n  /**\r\n   * What background color to use\r\n   */\r\n  backgroundColor?: string;\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  size?: 'small' | 'medium' | 'large';\r\n  /**\r\n   * Button contents\r\n   */\r\n  label: string;\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  onClick?: () => void;\r\n}\r\n\r\n/**\r\n * Primary UI component for user interaction\r\n */\r\nexport const Button = ({\r\n  primary = false,\r\n  size = 'medium',\r\n  backgroundColor,\r\n  label,\r\n  ...props\r\n}: ButtonProps) => {\r\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\r\n      style={{ backgroundColor }}\r\n      {...props}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Button } from './stories/button/Button';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Button primary label='hello'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './globals.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}